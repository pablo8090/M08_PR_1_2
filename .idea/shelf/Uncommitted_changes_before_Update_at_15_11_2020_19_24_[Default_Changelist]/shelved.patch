Index: app/src/main/java/com/example/m08_pr_1_2/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.m08_pr_1_2;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.text.Editable;\r\nimport android.util.Log;\r\nimport android.util.TypedValue;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    private int number;\r\n    private int attempts;\r\n    private int recordAtt;\r\n\r\n    public static final String EXTRA_MESSAGE = \"com.example.m08_pr_1_2.MESSAGE\";\r\n    public static final String EXTRA_BITMAP  = \"com.example.m08_pr_1_2.BITMAP\";\r\n\r\n    private int time;\r\n    private int recordTime;\r\n    private int minutes;\r\n    private int seconds;\r\n    private TimerTask second;\r\n    private Timer timer;\r\n    private TextView txtTimer;\r\n    private boolean timerActive;\r\n\r\n\r\n    private AlertDialog adRanking;\r\n    private EditText etRanking;\r\n\r\n    private Bitmap rankingBitmap;\r\n    private String rankingNick;\r\n\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        reset();\r\n\r\n        // Setting TextViews\r\n            // Timer view\r\n        txtTimer = findViewById(R.id.txtTimer);\r\n        txtTimer.setText(\"\");\r\n            // Log view\r\n        final TextView txtLog = findViewById(R.id.txtLog);\r\n        txtLog.setText(\"\");\r\n        txtLog.setTextColor(Color.RED);\r\n        txtLog.setTextSize(TypedValue.COMPLEX_UNIT_SP,17);\r\n\r\n        // Set the task for the timer, which executes every second for have a timer\r\n        setTimerTask();\r\n\r\n        // Set and prepare the dialog\r\n        setRankingDialog();\r\n\r\n        // Set attempts textview\r\n        final TextView txtAttempts = findViewById(R.id.txtAttempts);\r\n        txtAttempts.setText(\"Fallos: \" + attempts);\r\n\r\n        // Gets edit text\r\n        final EditText editNumber = findViewById(R.id.editNumber);\r\n\r\n        // Setting the validation button\r\n        final Button btValidate = findViewById(R.id.btValidate);\r\n        btValidate.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v) {\r\n                String sIn = String.valueOf(editNumber.getText());\r\n                String logReg = null;\r\n\r\n\r\n                if (sIn.equals(\"\") || sIn == null)\r\n                {\r\n                    logReg = \"No has introducido ningun numero!!\";\r\n                }\r\n                else\r\n                {\r\n                    int in = Integer.parseInt(sIn);\r\n                    if (in < 1 || in > 100)\r\n                    {\r\n                        logReg = \"El numero introducido no esta entre 1 y 100!!\";\r\n                    }\r\n                    else\r\n                    {\r\n                        if (number > in)\r\n                        {\r\n                            logReg = \"El numero que buscas es mas grande que \" + in;\r\n                            attempts++;\r\n                        }\r\n                        else if (number < in)\r\n                        {\r\n                            logReg = \"El numero que buscas es mas pequeño que \" + in;\r\n                            attempts++;\r\n                        }\r\n                        else // Number found\r\n                        {\r\n                            // Stops the timer, saves the record time and opens the ranking dialog\r\n                            timerActive = false;\r\n                            recordTime = time + (minutes*60);\r\n                            recordAtt = attempts;\r\n                            logReg = \"Has encontrado el numero \" + number + \" en \" + recordAtt + \" intentos y \" + recordTime + \" segundos!\";\r\n                            showRankingDialog();\r\n\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                // Every click on this validate button will generate an action which is saved in the log\r\n                // This function add the new register to the log, also it manages deleting old logs for avoid cutting off the text\r\n                manageLog(txtLog, logReg);\r\n\r\n                // reset attempts textview and the edit text\r\n                txtAttempts.setText(\"Fallos: \" + attempts);\r\n                editNumber.setText(\"\");\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private void openRanking() {\r\n        // Opens activity ranking with the intent message for save the new result\r\n        Intent intent = new Intent(MainActivity.this, Ranking.class);\r\n        String message = rankingNick + \",\" + recordAtt + \",\" + recordTime;\r\n        intent.putExtra(EXTRA_MESSAGE,message);\r\n        intent.putExtra(EXTRA_BITMAP, rankingBitmap);\r\n        startActivity(intent);\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == 1 && resultCode == RESULT_OK)\r\n        {\r\n            Bundle extras = data.getExtras();\r\n            rankingBitmap = (Bitmap) extras.get(\"data\");\r\n            openRanking();\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    private void getCameraPhoto() {\r\n        Intent takePictureIntent = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);\r\n\r\n        if (takePictureIntent.resolveActivity(getPackageManager()) != null) {\r\n            startActivityForResult(takePictureIntent, 1);\r\n        }\r\n    }\r\n\r\n    private void reset()\r\n    {\r\n        // Resets all parameters for new game\r\n        timerActive = true;\r\n        number = (int) (Math.random() * 100 + 1);\r\n        number = 1;\r\n        attempts = 0;\r\n        time = 0;\r\n        minutes = 0;\r\n        TextView log = findViewById(R.id.txtLog);\r\n        log.setText(\"\");\r\n        TextView att = findViewById(R.id.txtAttempts);\r\n        att.setText(\"Fallos: 0\");\r\n    }\r\n\r\n    private void setTimerTask() {\r\n        second = new TimerTask() {\r\n            public void run() {\r\n                if (timerActive)\r\n                {\r\n                    time++;\r\n\r\n                    if (time == 60) {\r\n                        time = 0;\r\n                        minutes++;\r\n                    }\r\n                    seconds = time;\r\n\r\n                    runOnUiThread(new Runnable() {\r\n                        public void run() {\r\n                            txtTimer.setText(getTimerString());\r\n                        }\r\n                    });\r\n\r\n\r\n                    if (minutes == 59 && time == 59)\r\n                    {\r\n                        timer.cancel();\r\n                        second.cancel();\r\n                    }\r\n                }\r\n\r\n            }\r\n        };\r\n\r\n        timer = new Timer();\r\n        timer.schedule(second, 0, 1000);\r\n    }\r\n\r\n\r\n    private void showRankingDialog()\r\n    {\r\n        // Show the ranking dialog and after show it gets the possitive button an override his click listener for control the input.\r\n        adRanking.show();\r\n        adRanking.getButton(AlertDialog.BUTTON_POSITIVE).setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                String value =  etRanking.getText().toString();\r\n\r\n                if ((value.length() <= 10 && value.length() >= 1) && !value.contains(\"\\n\"))\r\n                {\r\n                    rankingNick = value;\r\n                    adRanking.dismiss();\r\n                    getCameraPhoto();\r\n\r\n                }\r\n                else\r\n                {\r\n                    Toast t = Toast.makeText(getApplicationContext(), \"El nombre tiene que contener entre 1 y 10 caracteres y sin saltos de linea\", Toast.LENGTH_LONG);\r\n                    t.show();\r\n                }\r\n\r\n\r\n                reset();\r\n            }\r\n        });\r\n    }\r\n    private void setRankingDialog() {\r\n        // Builds ranking dialog\r\n        AlertDialog.Builder adb = new AlertDialog.Builder(this);\r\n        adb.setTitle(\"¿Quieres guardar tu puntuación en el Ranking?\");\r\n        adb.setMessage(\"Introduce tu nombre: \");\r\n        etRanking = new EditText(this);\r\n        adb.setView(etRanking);\r\n\r\n        adb.setPositiveButton(\"Ok\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n\r\n            }\r\n        });\r\n\r\n        adb.setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                reset();\r\n            }\r\n        });\r\n\r\n        adRanking = adb.create();\r\n        adRanking.setCanceledOnTouchOutside(false);\r\n\r\n    }\r\n\r\n    private String getTimerString()\r\n    {\r\n        // This function returns a 00:00 format timer string\r\n        StringBuilder sBuilder = new StringBuilder();\r\n\r\n        if (minutes < 10)\r\n            sBuilder.append(\"0\");\r\n       sBuilder.append(minutes + \":\");\r\n\r\n        if (seconds < 10)\r\n            sBuilder.append(\"0\");\r\n        sBuilder.append(seconds);\r\n\r\n        return sBuilder.toString();\r\n    }\r\n\r\n    private void manageLog(TextView txtLog, String logReg){\r\n        // Save last '\\n' before new append\r\n        int lastChar = txtLog.getText().length() - 1;\r\n        txtLog.append(getTimerString() + \" > \" + logReg + \"\\n\");\r\n\r\n\r\n\r\n        if ((txtLog.getLineCount() * txtLog.getLineHeight() > txtLog.getHeight()))\r\n        {\r\n            CharSequence logContent = txtLog.getText();\r\n            CharSequence lastAppend = logContent.subSequence(lastChar+1, logContent.length());\r\n\r\n            //i will be the index of the first line end -- '\\n'\r\n            int i = 0;\r\n            for (i = 0; i < logContent.length(); i++)\r\n            {\r\n                if (logContent.charAt(i) == '\\n')\r\n                    break;\r\n            }\r\n\r\n\r\n            // Erase one or two registers depending if appended text needs more or less space for not being cut off.\r\n\r\n            if (txtLog.getPaint().measureText(logContent, 0, i) > txtLog.getWidth())\r\n            {\r\n                // First register fills more than one line so we can just erase it\r\n                txtLog.setText(logContent.subSequence(i+1,logContent.length()));\r\n            }\r\n            else\r\n            {\r\n                if (txtLog.getPaint().measureText(lastAppend, 0, lastAppend.length()) > txtLog.getWidth())\r\n                {\r\n                    // In this case first register only fill one line and last append fill two, so we need to erase two registers\r\n                    // Finding second register...\r\n                    int j;\r\n                    for (j = i+1; j < logContent.length(); j++)\r\n                    {\r\n                        if (logContent.charAt(j) == '\\n')\r\n                            break;\r\n                    }\r\n                    txtLog.setText(logContent.subSequence(j+1,logContent.length()));\r\n                }\r\n                else\r\n                {\r\n                    // Last append only fills one line so we can just erase first register\r\n                    txtLog.setText(logContent.subSequence(i+1,logContent.length()));\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/m08_pr_1_2/MainActivity.java	(revision 32ee7ec79deeb3440a7e445d8cf71edc4e935347)
+++ app/src/main/java/com/example/m08_pr_1_2/MainActivity.java	(date 1604599556203)
@@ -1,4 +1,4 @@
-package com.example.m08_pr_1_2;
+    package com.example.m08_pr_1_2;
 
 import androidx.appcompat.app.AppCompatActivity;
 
